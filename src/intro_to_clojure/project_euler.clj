(ns intro-to-clojure.project-euler)

;; PROBLEM 1
;; If we list all the natural numbers below 10 that are
;; multiples of 3 or 5, we get 3, 5, 6 and 9.
;; The sum of these multiples is 23.
;;
;; Find the sum of all the multiples of 3 or 5 below 1000.
(defn divisor?
  [x d]
  (= 0 (rem x d)))
(def answer-1
  (let [xs (range 1000)
        d3 #(divisor? % 3)
        d5 #(divisor? % 5)
        ys (filter #(and (d3 %) (d5 %)) xs)]
    (reduce + ys)))
answer-1

;; PROBLEM 2
;; Each new term in the Fibonacci sequence is generated by
;; adding the previous two terms. By starting with 1 and 2,
;; the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;;
;; By considering the terms in the Fibonacci sequence whose values
;; do not exceed four million, find the sum of the even-valued terms.
(defn lazy-fib-seq
  []
  (let [next-fib-pair
        (fn [[a b]]
          [b (+ a b)])]
    (map first (iterate next-fib-pair [1 1]))))

(def answer-2
  (let [fibs      (lazy-fib-seq)
        even-fibs (filter even? fibs)
        under-4m  (take-while #(< % 4000000) even-fibs)]
    (reduce + under-4m)))
answer-2

;; PROBLEM 3
;; The prime factors of 13195 are 5, 7, 13 and 29.
;; What is the largest prime factor of the number 600851475143 ?
(defn sieve [s]
  (cons (first s)
        (lazy-seq
         (sieve (filter #(not= 0 (mod % (first s)))(rest s))))))
(defn prime-factors
  [x]
  (let [primes (take-while
                #(<= % (Math/sqrt x)) (sieve (iterate inc 2)))]
    (filter #(divisor? x %) primes)))

(prime-factors 600851475143)



